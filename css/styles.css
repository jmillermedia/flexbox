body {
	margin: 0px auto;
}

#container {
	display: flex;
	background: lightgreen;
	padding-top: 20px;
	width: 600px;
/*	height: 100vh;*/
	flex-flow: row wrap;
/*	justify-content: space-evenly;
	align-items: baseline;*/
/*	align-content: space-around;*/
	height: 100vh;
}

.item {
	background: lightcoral;
	padding: 30px;
	margin: 10px;
	text-align: center;
	border: 1px #ccc solid;
}

.item2 {
	background: lightcoral;
	padding: 30px;
	margin: 10px;
	text-align: center;
	border: 1px #ccc solid;
	flex-basis: 160px;
}

.order2 {
	order: 2; /*sets the order that you decide (not in lesson: everything seems to have a default of 0. indexing like javascript?? Here, I've put Item 2 with a 'weight' of '2' and Item 5 with a 'weight' of '1', so going in order would look like 
	Item 1-0 
	Item 2-2
	Item 3-0
	Item 4-0
	Item 5-1
	Item 6-0
	Which means it'll go from the order on the HTML, but then prioritizing with the order class. So, this order looks like:
	Item 1-0
	Item 3-0
	Item 4-0
	Item 6-0
	Item 5-1
	Item 2-2*/
}

.order1 {
	order: 1; /* Can also have a negative value */
}